import React, { useState, useEffect } from "react";
import axios from "axios";
import "./App.css";

function App() {
  const [users, setUsers] = useState([]);
  const [form, setForm] = useState({ name: "", email: "" });

  // üß© L·∫•y danh s√°ch user t·ª´ backend
  const fetchUsers = async () => {
    try {
      const res = await axios.get("http://localhost:5000/api/users");
      setUsers(res.data);
    } catch (err) {
      console.error("L·ªói khi t·∫£i danh s√°ch:", err);
    }
  };

  useEffect(() => {
    fetchUsers();
  }, []);

  // ‚ûï Th√™m user m·ªõi
  const handleSubmit = async (e) => {
    e.preventDefault();
    if (!form.name || !form.email)
      return alert("Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß th√¥ng tin!");

    try {
      await axios.post("http://localhost:5000/api/users", form);
      setForm({ name: "", email: "" });
      fetchUsers();
    } catch (err) {
      console.error("L·ªói khi th√™m user:", err);
    }
  };

  // ‚ùå X√≥a user
  const handleDelete = async (id) => {
    if (window.confirm("B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a ng∆∞·ªùi d√πng n√†y kh√¥ng?")) {
      try {
        await axios.delete(`http://localhost:5000/api/users/${id}`);
        fetchUsers();
      } catch (err) {
        console.error("L·ªói khi x√≥a user:", err);
      }
    }
  };

  // ‚úèÔ∏è S·ª≠a user
  const handleEdit = async (user) => {
    const newName = prompt("Nh·∫≠p t√™n m·ªõi:", user.name);
    const newEmail = prompt("Nh·∫≠p email m·ªõi:", user.email);

    if (!newName || !newEmail) return alert("Kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng!");

    try {
      await axios.put(`http://localhost:5000/api/users/${user._id}`, {
        name: newName,
        email: newEmail,
      });
      fetchUsers();
    } catch (err) {
      console.error("L·ªói khi s·ª≠a user:", err);
    }
  };

  return (
    <div className="app-container">
      <h2 className="main-title">üìã Qu·∫£n l√Ω ng∆∞·ªùi d√πng (MongoDB + React)</h2>

      {/* Form th√™m ng∆∞·ªùi d√πng */}
      <div className="form-card">
        <h3>Th√™m ng∆∞·ªùi d√πng m·ªõi</h3>
        <form onSubmit={handleSubmit}>
          <div className="form-group">
            <label>T√™n:</label>
            <input
              type="text"
              value={form.name}
              onChange={(e) => setForm({ ...form, name: e.target.value })}
              required
            />
          </div>
          <div className="form-group">
            <label>Email:</label>
            <input
              type="email"
              value={form.email}
              onChange={(e) => setForm({ ...form, email: e.target.value })}
              required
            />
          </div>
          <button type="submit" className="btn-add">
            + Th√™m
          </button>
        </form>
      </div>

      {/* Danh s√°ch ng∆∞·ªùi d√πng */}
      <div className="list-card">
        <h3>Danh s√°ch ng∆∞·ªùi d√πng</h3>
        <table className="user-table">
          <thead>
            <tr>
              <th>ID</th>
              <th>T√™n</th>
              <th>Email</th>
              <th>H√†nh ƒë·ªông</th>
            </tr>
          </thead>
          <tbody>
            {users.length > 0 ? (
              users.map((u) => (
                <tr key={u._id}>
                  <td>{u._id}</td>
                  <td>{u.name}</td>
                  <td>{u.email}</td>
                  <td>
                    <button className="btn-edit" onClick={() => handleEdit(u)}>
                      S·ª≠a
                    </button>
                    <button
                      className="btn-delete"
                      onClick={() => handleDelete(u._id)}
                    >
                      X√≥a
                    </button>
                  </td>
                </tr>
              ))
            ) : (
              <tr>
                <td colSpan="4" className="empty">
                  Ch∆∞a c√≥ ng∆∞·ªùi d√πng n√†o üì≠
                </td>
              </tr>
            )}
          </tbody>
        </table>
      </div>
    </div>
  );
}

export default App;
